{"ast":null,"code":"var _jsxFileName = \"/Users/bytedance/Desktop/\\u683C\\u5F0F\\u5316/hy-react-web-music-master/src/pages/player/c-cpns/player-info/index.js\";\nimport React, { memo, useState } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { getSizeImage } from '@/utils/format-utils';\nimport HYSongOperationBar from '@/components/song-operation-bar';\nimport { InfoWrapper, InfoLeft, InfoRight } from './style';\nexport default memo(function HYPlayerInfo() {\n  // props and hooks\n  const [isSpread, setIsSpread] = useState(false); // redux hooks\n\n  const {\n    currentSong,\n    currentLyrics\n  } = useSelector(state => ({\n    currentSong: state.getIn([\"player\", \"currentSong\"]),\n    currentLyrics: state.getIn([\"player\", \"currentLyrics\"])\n  }), shallowEqual); // handle code\n\n  const totalLyricCount = isSpread ? currentLyrics.length : 13;\n  return /*#__PURE__*/React.createElement(InfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfoLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: getSizeImage(currentSong.al.picUrl, 130),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cover image_cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"sprite_icon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"\\u751F\\u6210\\u5916\\u8054\\u64AD\\u653E\\u5668\"))), /*#__PURE__*/React.createElement(InfoRight, {\n    isSpread: isSpread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"sprite_icon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, currentSong.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"singer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"\\u6B4C\\u624B\\uFF1A\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, currentSong.ar[0].name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"album\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"\\u6240\\u5C5E\\u4E13\\u8F91\\uFF1A\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, currentSong.al.name)), /*#__PURE__*/React.createElement(HYSongOperationBar, {\n    favorTitle: \"\\u6536\\u85CF\",\n    shareTitle: \"\\u5206\\u4EAB\",\n    downloadTitle: \"\\u4E0B\\u8F7D\",\n    commentTitle: \"(167366)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lyric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lyric-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, currentLyrics.slice(0, totalLyricCount).map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: item.time,\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }\n    }, item.content);\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"lyric-control\",\n    onClick: e => setIsSpread(!isSpread),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, isSpread ? \"收起\" : \"展开\", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"sprite_icon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })))));\n});","map":{"version":3,"sources":["/Users/bytedance/Desktop/格式化/hy-react-web-music-master/src/pages/player/c-cpns/player-info/index.js"],"names":["React","memo","useState","useSelector","shallowEqual","getSizeImage","HYSongOperationBar","InfoWrapper","InfoLeft","InfoRight","HYPlayerInfo","isSpread","setIsSpread","currentSong","currentLyrics","state","getIn","totalLyricCount","length","al","picUrl","name","ar","slice","map","item","index","time","content","e"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nimport { getSizeImage } from '@/utils/format-utils';\n\nimport HYSongOperationBar from '@/components/song-operation-bar';\nimport {\n  InfoWrapper,\n  InfoLeft,\n  InfoRight\n} from './style';\n\nexport default memo(function HYPlayerInfo() {\n  // props and hooks\n  const [isSpread, setIsSpread] = useState(false);\n\n  // redux hooks\n  const { currentSong, currentLyrics } = useSelector(state => ({\n    currentSong: state.getIn([\"player\", \"currentSong\"]),\n    currentLyrics: state.getIn([\"player\", \"currentLyrics\"])\n  }), shallowEqual);\n\n  // handle code\n  const totalLyricCount = isSpread ? currentLyrics.length : 13;\n\n  return (\n    <InfoWrapper>\n      <InfoLeft>\n        <div className=\"image\">\n          <img src={getSizeImage(currentSong.al.picUrl, 130)} alt=\"\" />\n          <span className=\"cover image_cover\"></span>\n        </div>\n        <div className=\"link\">\n          <i className=\"sprite_icon2\"></i>\n          <a href=\"#/\">生成外联播放器</a>\n        </div>\n      </InfoLeft>\n      <InfoRight isSpread={isSpread}>\n        <div className=\"header\">\n          <i className=\"sprite_icon2\"></i>\n          <h3 className=\"title\">{currentSong.name}</h3>\n        </div>\n        <div className=\"singer\">\n          <span className=\"label\">歌手：</span>\n          <a href=\"/#\" className=\"name\">{currentSong.ar[0].name}</a>\n        </div>\n        <div className=\"album\">\n          <span className=\"label\">所属专辑：</span>\n          <a href=\"/#\" className=\"name\">{currentSong.al.name}</a>\n        </div>\n\n        <HYSongOperationBar favorTitle=\"收藏\"\n                            shareTitle=\"分享\"\n                            downloadTitle=\"下载\"\n                            commentTitle=\"(167366)\"/>\n\n        <div className=\"lyric\">\n          <div className=\"lyric-info\">\n            {\n              currentLyrics.slice(0, totalLyricCount).map((item, index) => {\n                return <p key={item.time} className=\"text\">{item.content}</p>\n              })\n            }\n          </div>\n          <button className=\"lyric-control\"\n                  onClick={e => setIsSpread(!isSpread)}>\n            {isSpread ? \"收起\": \"展开\"}\n            <i className=\"sprite_icon2\"></i>\n          </button>\n        </div>\n      </InfoRight>\n    </InfoWrapper>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}