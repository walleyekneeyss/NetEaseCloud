{"ast":null,"code":"var _jsxFileName = \"/Users/bytedance/Desktop/\\u683C\\u5F0F\\u5316/hy-react-web-music-master/src/pages/discover/c-pages/artist/c-cpns/artist-category/index.js\";\nimport React, { memo } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport classNames from 'classnames';\nimport { artistCategories } from '@/services/local-data';\nimport { CategoryWrapper, CategoryItem } from './style';\nimport { changeCurrentAreaAction, changeCurrentTypeAction } from '../../store/actionCreators';\nexport default memo(function HYArtistCategory(props) {\n  // redux hooks\n  const {\n    currentArea,\n    currentType\n  } = useSelector(state => ({\n    currentArea: state.getIn([\"artist\", \"currentArea\"]),\n    currentType: state.getIn([\"artist\", \"currentType\"])\n  }), shallowEqual);\n  const dispatch = useDispatch(); // handle function\n\n  const selectArtist = (area, type) => {\n    dispatch(changeCurrentAreaAction(area));\n    dispatch(changeCurrentTypeAction(type));\n  }; // render jsx\n\n\n  const renderArtist = (artists, area) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, artists.map((item, index) => {\n      const isSelect = currentArea === area && currentType.type === item.type;\n      return /*#__PURE__*/React.createElement(CategoryItem, {\n        key: item.name,\n        className: classNames({\n          \"active\": isSelect\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: e => selectArtist(area, item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, item.name));\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(CategoryWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, artistCategories.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section\",\n      key: item.area,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, item.title), renderArtist(item.artists, item.area));\n  }));\n});","map":{"version":3,"sources":["/Users/bytedance/Desktop/格式化/hy-react-web-music-master/src/pages/discover/c-pages/artist/c-cpns/artist-category/index.js"],"names":["React","memo","useDispatch","useSelector","shallowEqual","classNames","artistCategories","CategoryWrapper","CategoryItem","changeCurrentAreaAction","changeCurrentTypeAction","HYArtistCategory","props","currentArea","currentType","state","getIn","dispatch","selectArtist","area","type","renderArtist","artists","map","item","index","isSelect","name","e","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,gBAAT,QAAiC,uBAAjC;AAEA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,SAA9C;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,4BAAjE;AAEA,eAAeT,IAAI,CAAC,SAASU,gBAAT,CAA0BC,KAA1B,EAAiC;AAEnD;AACA,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA6BX,WAAW,CAACY,KAAK,KAAK;AACvDF,IAAAA,WAAW,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,aAAX,CAAZ,CAD0C;AAEvDF,IAAAA,WAAW,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,aAAX,CAAZ;AAF0C,GAAL,CAAN,EAG1CZ,YAH0C,CAA9C;AAIA,QAAMa,QAAQ,GAAGf,WAAW,EAA5B,CAPmD,CASnD;;AACA,QAAMgB,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACnCH,IAAAA,QAAQ,CAACR,uBAAuB,CAACU,IAAD,CAAxB,CAAR;AACAF,IAAAA,QAAQ,CAACP,uBAAuB,CAACU,IAAD,CAAxB,CAAR;AACD,GAHD,CAVmD,CAenD;;;AACA,QAAMC,YAAY,GAAG,CAACC,OAAD,EAAUH,IAAV,KAAmB;AACtC,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIG,OAAO,CAACC,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,YAAMC,QAAQ,GAAGb,WAAW,KAAKM,IAAhB,IAAwBL,WAAW,CAACM,IAAZ,KAAqBI,IAAI,CAACJ,IAAnE;AACA,0BACE,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEI,IAAI,CAACG,IAAxB;AACc,QAAA,SAAS,EAAEtB,UAAU,CAAC;AAAC,oBAAUqB;AAAX,SAAD,CADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAM,QAAA,OAAO,EAAEE,CAAC,IAAIV,YAAY,CAACC,IAAD,EAAOK,IAAP,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+CA,IAAI,CAACG,IAApD,CAFF,CADF;AAMD,KARD,CAFJ,CADF;AAeD,GAhBD;;AAkBA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIrB,gBAAgB,CAACiB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAED,IAAI,CAACL,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBK,IAAI,CAACK,KAA5B,CADF,EAEGR,YAAY,CAACG,IAAI,CAACF,OAAN,EAAeE,IAAI,CAACL,IAApB,CAFf,CADF;AAMD,GAPD,CAFJ,CADF;AAcD,CAhDkB,CAAnB","sourcesContent":["import React, { memo } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { artistCategories } from '@/services/local-data';\n\nimport { CategoryWrapper, CategoryItem } from './style';\nimport { changeCurrentAreaAction, changeCurrentTypeAction } from '../../store/actionCreators';\n\nexport default memo(function HYArtistCategory(props) {\n\n  // redux hooks\n  const {currentArea, currentType} = useSelector(state => ({\n    currentArea: state.getIn([\"artist\", \"currentArea\"]),\n    currentType: state.getIn([\"artist\", \"currentType\"])\n  }), shallowEqual);\n  const dispatch = useDispatch();\n\n  // handle function\n  const selectArtist = (area, type) => {\n    dispatch(changeCurrentAreaAction(area));\n    dispatch(changeCurrentTypeAction(type));\n  }\n\n  // render jsx\n  const renderArtist = (artists, area) => {\n    return (\n      <div>\n        {\n          artists.map((item, index) => {\n            const isSelect = currentArea === area && currentType.type === item.type;\n            return (\n              <CategoryItem key={item.name} \n                            className={classNames({\"active\": isSelect})}>\n                <span onClick={e => selectArtist(area, item)}>{item.name}</span>\n              </CategoryItem>\n            )\n          })\n        }\n      </div>\n    )\n  }\n\n  return (\n    <CategoryWrapper>\n      {\n        artistCategories.map((item, index) => {\n          return (\n            <div className=\"section\" key={item.area}>\n              <h2 className=\"title\">{item.title}</h2>\n              {renderArtist(item.artists, item.area)}\n            </div>\n          )\n        })\n      }\n    </CategoryWrapper>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}